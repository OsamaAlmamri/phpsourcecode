/************************************************************************/
/*
Copyright 2017 wtulip Inc.
License GPL
Author:crazycooler
Description:和服务器数据同步
*/
/************************************************************************/

#pragma once
#include "MCommon.h"
#include <QObject>
#include <vector>
#include "MHttp.h"

class MSyncData : public QObject
{
	Q_OBJECT

public:
	MSyncData(QObject *parent=nullptr);
	~MSyncData();

public:
	/************************************************************************/
	/* 
	获取服务器中最新的数据
	*/
	/************************************************************************/
	void getDataFromServer();

	/************************************************************************/
	/* 
	将本地缓存中修改的数据同步到服务器
	*/
	/************************************************************************/
	bool setDataToServer();

private:

	/************************************************************************/
	/*
	服务器应答
	获取服务器中最新的数据
	*/
	/************************************************************************/
	void getDataCallback(int status, const MResponseData &data);

	/************************************************************************/
	/*
	服务器应答
	将本地缓存中修改的数据同步到服务器
	*/
	/************************************************************************/
	void setDataCallback(int status, const MResponseData &data);

	/************************************************************************/
	/* 
	获取缓存中被修改的doc
	*/
	/************************************************************************/
	int __getChangeDocsToJson(QJsonArray &docs);

	/************************************************************************/
	/* 
	获取缓存中，当前用户被修改dir
	*/
	/************************************************************************/
	bool __getChangeDirToJson(QJsonObject &dir);

	void timerEvent(QTimerEvent *event);

signals:
	/************************************************************************/
	/* 
	信号
	获取服务器数据之后
	*/
	/************************************************************************/
	void afterGetDataFromServer();

	/************************************************************************/
	/*
	信号
	向服务器同步本地修改之后
	*/
	/************************************************************************/
	void afterSetDataToServer();

	/************************************************************************/
	/*
	信号
	向服务器同步本地修改之前
	*/
	/************************************************************************/
	void startSetDataToServer();

	/************************************************************************/
	/*
	信号
	数据同步错误
	*/
	/************************************************************************/
	void networkError(bool b);

private:
	QString m_name;
	int m_nTimerId;
	int m_delaySyncCount;
};
