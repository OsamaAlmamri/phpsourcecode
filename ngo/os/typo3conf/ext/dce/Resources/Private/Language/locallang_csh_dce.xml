<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<T3locallang>
	<meta type="array">
		<type>module</type>
		<description>Language labels for the Dynamic Content Elements extension</description>
	</meta>
	<data type="array">
		<languageKey index="default" type="array">
			<label index=".id">DCE record</label>
			<label index=".details">This record defines how the new content element type should look like.</label>

			<label index="title.description">Here you name the new content element type. You can use "LLL:" references here.</label>
			<label index="identifier.description">The identifier is used for CType of new content elements based on this DCE. The identifier you enter is prefixed with "dce_". If the identifier remains empty, the uid of this DCE is used for CType. The identifier must be written in lowercase, undercores are allowed.</label>
			<label index="hidden.description">When you disable this DCE, all content elements existing based on this DCE, will get also hidden. Otherwise they would cause errors, because disabled DCEs can not get rendered.</label>
			<label index="fields.description">Here you can define dynamically fields and arrange them in tabs. Those fields can get used in templates.</label>

			<label index="template_type.description">You can outsource the template to a file or edit the template right here in the inline editor.</label>
			<label index="template_content.description">Here you edit the Fluid template for the frontend output of this DCE.</label>
			<label index="template_file.description">By default you can choose files from configured file storages (e.g. fileadmin/). But you can also enter paths like "EXT:mytemplate/.../MyDce.html".</label>

			<label index="enable_container.description">When you enable this option, all DCEs of same type in a row will get wrapped by a container template.</label>
			<label index="container_item_limit.description">When the container item limit is set, a new container will be forced when the limit is reached.</label>
			<label index="container_template_type.description">You can outsource the template to a file or edit the template right here in the inline editor.</label>
			<label index="container_template.description">Here you edit the Fluid template for the container wrapped around the instances of this DCE.</label>
			<label index="container_template_file.description">By default you can choose files from configured file storages (e.g. fileadmin/). But you can also enter paths like "EXT:mytemplate/.../MyDce.html".</label>

			<label index="use_simple_backend_view.description">This enables the simple backend view. When you uncheck this you get a backend Fluid template for custom backend output.</label>
			<label index="backend_view_header.description">Choose the field in this DCE which should be displayed as header in backend's page view.</label>
			<label index="backend_view_bodytext.description">Here you can select several fields from your DCE. They get displayed in a table. With support of images.</label>
			<label index="backend_template_type.description">You can outsource the template to a file or edit the template right here in the inline editor.</label>
			<label index="backend_template_content.description">Here you edit the Fluid template for the backend output (in page module) of this DCE. Please use provided "BackendTemplate" layout, which provides sections for "header" and "bodytext".</label>
			<label index="backend_template_file.description">By default you can choose files from configured file storages (e.g. fileadmin/). But you can also enter paths like "EXT:mytemplate/.../MyDce.html".</label>

			<label index="wizard_icon.description">Which icon should the DCE have in backend? You can choose "custom" to upload your own icons.</label>
			<label index="wizard_custom_icon.description">Enter the path to your custom icon.</label>
			<label index="wizard_enable.description">Should this DCE also be displayed in wizard for new content elements?</label>
			<label index="wizard_category.description">The wizard for new content elements provides tabs for different categories. Here you can choose in which tab this content element should appear.</label>
			<label index="wizard_description.description">Description displayed in new content element wizard. You can use "LLL:" references here.</label>

			<label index="enable_detailpage.description">This allows you to render a different frontend template, when a configured GET parameter is containing the uid of a certain tt_content element based on this DCE.</label>
			<label index="detailpage_identifier.description">This is the GET parameter which is checked. The given content element will render the detail template, if this request parameter is given.</label>
			<label index="detailpage_template_type.description">You can outsource the template to a file or edit the template right here in the inline editor.</label>
			<label index="detailpage_template.description">Here you edit the Fluid template for the detail page output of this DCE, which is triggered by configured GET parameter.</label>
			<label index="detailpage_template_file.description">By default you can choose files from configured file storages (e.g. fileadmin/). But you can also enter paths like "EXT:mytemplate/.../MyDce.html".</label>

			<label index="cache_dce.description">If you disable the DCE cache, it may impact your page render performance.</label>
			<label index="direct_output.description">When enabled, it bypasses fluid_styled_content (lib.contentElement). This disables the "csc-default" wrap in html output and increases performance significantly.</label>
			<label index="flexform_label.description">Flexforms can have a separate title. The configured default LLL key points to "Contents:"</label>
			<label index="show_access_tab.description">If enabled, a new "Access" tab is displayed in content elements. Visibility fields get automatically removed from DCE palette, if configured.</label>
			<label index="show_media_tab.description">Displays "Media" tab in content elements. You can access the media in your Fluid template with: {contentObject.media} or {contentObject.assets}</label>
			<label index="show_media_tab.show_category_tab">Displays "Category" tab in content elements. You can access the categories in your Fluid template with: {contentObject.categories}</label>
			<label index="palette_fields.show_category_tab">Above the flexform field there is a TCA palette containing several TCA fields, in each content element. Here you can define the TCA fields to be displayed.</label>
			<label index="template_layout_root_path.show_category_tab">Define a path to be added to Fluid layout root paths. This affects all templates of this DCE.</label>
			<label index="template_partial_root_path.show_category_tab">Define a path to be added to Fluid partial root paths. This affects all templates of this DCE.</label>
		</languageKey>
		<languageKey index="de" type="array">
			<label index=".id">DCE</label>
			<label index=".details">Dieser Eintrag definiert wie ein Inhaltselement basierend auf DCE aussehen soll.</label>

			<label index="title.description">Hier wird der Name des Inhaltselementes angegbeen. "LLL:"-Referenzen können verwendet werden.</label>
			<label index="identifier.description">Der Identifier wird verwendet um den CType eines neuen Inhaltselements basierend auf diesem DCE zu definieren. Er wird mit "dce_" vorangestellt. Wenn der Identifier nicht angegeben wird, wird die UID des DCE für den CType verwendet. Der Identifier muss klein geschrieben werden, Unterstriche sind erlaubt.</label>
			<label index="hidden.description">Wenn dieses DCE deaktiviert wird, werden auch alle Inhaltselemente die darauf basieren deaktiviert. Ansonsten kann es zu Fehlermeldungen führen, da deaktivierte DCEs nicht gerendert werden können.</label>
			<label index="fields.description">Hier werden die dynamischen Felder des DCE definiert und in Tabs arrangiert. Diese Felder können später im Template verwendet werden.</label>

			<label index="template_type.description">Es ist möglich das Template in eine Datei auszulagern oder direkt hier zu bearbeiten.</label>
			<label index="template_content.description">Dies ist das Fluid-Template für die Frontend-Ausgabe von diesem DCEDCE.</label>
			<label index="template_file.description">Hier kann standardmäßig eine Datei aus einem konfigurierten File-Storage (z.B. fileadmin/) ausgewählt werden. Es ist aber auch möglich Pfade wie "EXT:mytemplate/.../MyDce.html" zu verwenden.</label>

			<label index="enable_container.description">Wenn diese Option aktiviert wird, werden alle Inhaltselemente die auf dem selben DCE basieren und in einer Reihe liegen, mit einem Container-Template umschlossen.</label>
			<label index="container_item_limit.description">Wenn das Container Limit erreicht ist, werden weitere Elemente in einem neuen Container zusammengefasst.</label>
			<label index="container_template_type.description">Es ist möglich das Template in eine Datei auszulagern oder direkt hier zu bearbeiten.</label>
			<label index="container_template.description">Dies ist das Fluid-Template für den Container, der um die verschiedenen Inhaltselemente herum gerendert wird.</label>
			<label index="container_template_file.description">Hier kann standardmäßig eine Datei aus einem konfigurierten File-Storage (z.B. fileadmin/) ausgewählt werden. Es ist aber auch möglich Pfade wie "EXT:mytemplate/.../MyDce.html" zu verwenden.</label>

			<label index="use_simple_backend_view.description">Dies aktiviert die einfache Backend-Ansicht. Wird es deaktiviert kann über ein Fluid template die Backend-Ausgabe beliebig angepasst werden.</label>
			<label index="backend_view_header.description">Wähle ein Feld das als Header dargestellt werden, soll im Backend (Seiten-Ansicht)</label>
			<label index="backend_view_bodytext.description">Hier können mehrere Felder des DCE gewählt werden. Sie werden im Bodytext, als Tabelle dargestellt. Inkl. Bilder-Support.</label>
			<label index="backend_template_type.description">Es ist möglich das Template in eine Datei auszulagern oder direkt hier zu bearbeiten.</label>
			<label index="backend_template_content.description">Dies ist das Fluid-Template für die Backend-Ausgabe (im Seiten-Modul) dieses DCEs. Es wird empfohlen das mitgelieferte "BackendTemplate" Layout zu verwenden, welches Sektionen für "header" und "bodytext" bereitstellt.</label>
			<label index="backend_template_file.description">Hier kann standardmäßig eine Datei aus einem konfigurierten File-Storage (z.B. fileadmin/) ausgewählt werden. Es ist aber auch möglich Pfade wie "EXT:mytemplate/.../MyDce.html" zu verwenden.</label>

			<label index="wizard_icon.description">Welches Icon soll das DCE im Backend haben? Wenn "custom" gewählt wurde, können eigene Icons verwendet werden.</label>
			<label index="wizard_custom_icon.description">Bitte den Pfad zum Icon eingeben.</label>
			<label index="wizard_enable.description">Soll dieses Inhaltselement auch im Wizard für neue Inhaltselemente angezeigt werden?</label>
			<label index="wizard_category.description">Der Wizard für neue Inhaltselemente gruppiert die verschiedenen Elemente in Kategorien. Hier kannst Du wählen unter welcher Kategorie dieses Element erscheinen soll.</label>
			<label index="wizard_description.description">Beschreibungstext welcher im Wizard für neue Inhaltselemente angezeigt wird. "LLL:"-Referenzen können verwendet werden.</label>

			<label index="enable_detailpage.description">Wenn aktiviert, wird ein anderes Frontend-Template gerendert, wenn ein konfigurierter GET-Parameter die uid des jeweiligen Inhaltselementes beinhaltet.</label>
			<label index="detailpage_identifier.description">Dies ist der GET-Parameter der zwischen normalen und Detail-Template unterscheidet.</label>
			<label index="detailpage_template_type.description">Es ist möglich das Template in eine Datei auszulagern oder direkt hier zu bearbeiten.</label>
			<label index="detailpage_template.description">Dies ist das Fluid-Template für die Detailseiten-Ausgabe, welche durch einen konfigurierten GET-Parameter getriggert wird.</label>
			<label index="detailpage_template_file.description">Hier kann standardmäßig eine Datei aus einem konfigurierten File-Storage (z.B. fileadmin/) ausgewählt werden. Es ist aber auch möglich Pfade wie "EXT:mytemplate/.../MyDce.html" zu verwenden.</label>

			<label index="cache_dce.description">Wenn der DCE-Cache deaktiviert wird, kann dies Auswirkungen auf die Render-Performance haben.</label>
			<label index="direct_output.description">Wenn aktiviert wird fluid_styled_content (lib.contentElement) umgangen. Das verhinert das "csc-default"-Wrap in der HTMl-Ausgabe und erhöht die Performance signifikant.</label>
			<label index="flexform_label.description">Flexforms können einen eigenen Titel besitzen. Der hier konfigurierte LLL-Schlüssel zeigt auf das Label "Inhalte:"</label>
			<label index="show_access_tab.description">Wenn aktiviert, wird ein neuer Reiter "Zugang" angezeigt, in den Inhaltselementen. Sichtbarkeits-Felder werden von der DCE-Palette automatisch entfernt, falls konfiguriert.</label>
			<label index="show_media_tab.description">Zeigt "Media"-Reiter in Inhaltselementen an. Im Fluid-Template kann so darauf zugegriffen werden: {contentObject.media} oder {contentObject.assets}</label>
			<label index="show_media_tab.description">Zeigt "Kategorie"-Reoter in Inhaltselementen an. Im Fluid-Template kann so darauf zugegriffen werden: {contentObject.categories}</label>
			<label index="palette_fields.description">Über dem Flexform wird eine TCA Palette angezeigt, mit verschiedenen TCA-Feldern. Hier kann definiert werden, welche Felder dort angezeigt werden sollen.</label>
			<label index="template_layout_root_path.description">Definiert einen Pfad der in die Fluid Layout Root Pfade hinzugefügt wird. Dies betrifft alle Templates dieses DCEs.</label>
			<label index="template_partial_root_path.description">Definiert einen Pfad der in die Fluid Partial Root Pfade hinzugefügt wird. Dies betrifft alle Templates dieses DCEs.</label>
		</languageKey>
	</data>
</T3locallang>
