VgotFaster PHP 框架
	这是一款敏捷,高效的PHP开发框架.

	框架以OOP(面向对象)为基础,以MVC(Model-View-Controller)为架构,支持模型,类库,辅助函数的加载.
	使用一个文件为接口文件，通过多个接口文件，可以多个应用程序共用一个系统核心。

	使用 $this->load 方法便可以自由的载入各个对象.

	支持访问地址路由和路由转换.
		访问地址以 控制器的所在文件夹/控制器名称/访问方法 为路由地址,并支持路由转换.
		路由转换支持以正则表达式的方式将一个地址转换到另一个控制器中.

		路由转换例:
			$routes['picture/(\d+)/page\-(\d+)'] = 'view/pic/$1/$2';
		上面路由会将类似下面的地址转换到指定控制器
			picture/386/page-21  转换为  view/pic/386/21
		也可以不使用正则直接转换.

	配置:
		应用程序拥有很多自由的配置可以在配置中设置自动载入的类库、模型和辅助函数
		可以设置路由的方式(QUERY_STRING 或 PATH_INFO),默认控制器名称,路由连接字串,路由后缀,视图和模板后缀,
		是否支持相关环境和路由允许的字符串等安全设置
		还包括:数据库设置,路由转换设置

	支持自定义错误输出和 404 页面

	视图与模板:
		视图可以用纯粹的PHP文件,也可以使用{}大括号标记的模板语法,在PHP视图文件中,可以由配置在服务器关闭短标记
		的情况下支持PHP短标记(<?=$var?>)
		模板语法支持:
			{loop $list $key $val}
				Key:$key Value:$val
			{/loop}

			{if strlen($string) == 38}
				Something...
			{/if}
		等等..
		(模板是经过对比并且编译成PHP文件后包含运行的)
			视图载入: $this->load->view(ViewName,VarsArray);
			模板载入: $this->load->template(TemplateName,VarsArray); 模板语法: {template TemplateName}

	系统自带的类库有:
		配置              输入安全 	 功能载入   路由            FTP
		MySQL数据库操作   模板解析   图像处理   文件上传        AUTH加解密
    分页              缓存       数据库Session

	系统自带的辅助函数有：
		数组   基准测试   目录       下载      文件操作与处理
		IP     数字       文本处理   时间 URL

Feature:

	新的短标签支持方案，支持更多的短标签情况，可能相对效率有些降低，暂未加入。

	eval('?>'.preg_replace('/\<\?(?!php)/i', '<?php', 
		preg_replace('/(?<=[^\{\};\s:])\?>/', '; ?>', 
			str_replace('<?=', '<?php echo ', file_get_contents($this->_view['file']))
		)));

Changelog:

	22:32 2009/10/9
		增加 URL 辅助函数 redirect()

	2:20 2009/10/15
		修改 mysql 数据操作类中自动判断是否需要增加表名的前缀
		分离 where() 方法，增加 update() 方法
		修复载入视图中，当要调返回缓冲时记录LOG时的变量不存在错误
	16:37 2009-10-15
		修改 url 辅助函数 siteUrl，精减和优化大量代码
		baseUrl() 增加一个参数，返回连接后的地址
		修改配置中 base_url 结尾要求带斜杠 "/"
		修改写文件函数中写文件函数名为 fileWrite()

	10:37 2009-10-16
		增加一个文件辅助函数 symbolicPermissions() 用于格式化文件权限输出
		增加一个文件辅助函数 convertFileSize() 用于格式化文件大小输出
	15:42 2009-10-16
		改正文件辅助函数 fileWrite() 名，原来写错成 fileWirte() 了
		修复下载辅助函数中文件路径为斜杠为 "\" 时输出的文件名为完整路径的问题

	20:59 2009/10/17
		将模板解析类中生成编译文件头部原直接 if 判断修改为 !defined('VGOTFASTER') && exit('Access Denied');
		添加会话加解密类 encrypt，并在配置中添加 auth_key 项

	16:40 2009/10/18
		修复(修改)URI只能访问控制器中的公开方法(public)，其它私有和受保护的方法等一律不可以访问。

	14:56 2009-10-23
		修改目录辅助函数中 remove_dir() 移除非空目录函数名为 removeDir()

	2:41 2009/10/27
		完成并增加了文件上传类，支持自动重命名，随机文件名，格式限制，错误输出等诸多设置
		并可以通过在自定义配置下新建 upload 配置来达到载入类库时自动调用自定义配置的功能
		改进了配置类，增加 SYS_Config::test() 方法以静默获取和测试配置是否正常
	10:11 2009-10-27
		修复上传类 doUpload() 第二个参数配置不生效的问题，纯粹疏忽。
		修改返回的后缀为不带点“.”
		优化一些处理过程，修改 displayErrors() 方法名为 errors() 只用于返回错误信息
	23:43 2009/10/27
		分离文件上传类中上传处理过程到 progressUpload() 方法中
		增加多文件上传方法 doMultiUpload()

	22:18 2009/10/28
		修改核心基础类中 BaseIn() 的核心关联类为 protected 保护，避免外部访问

	0:51 2009/11/5
		前几天加今天更新了输入类，增加获取 IP 和获取 $_SERVER 方法，副加了源码转文本的方法，并且优化大量代码和方法

	2:59 2009/11/9
		输入安全类添加 segment() 方法，用于取得 URI 段落

	16:10 2009-11-10
		修改了文件辅助函数中 fileWrite() 函数无法写入时的报错方法。
		增加输入类的保护字串，增加 _SERVER 和 _COOKIE
		修改上传类中未选择文件上传时的报错信息，代码为 4

	2:46 2009/11/15
		再次更新 URL 函数中 siteUrl() 函数，合并 PATH_INFO 与 QUERY_STRING 方法，减少代码与处理过程。

	0:11 2009/11/18
		更换上传类中的所有使用 pathinfo 函数为自带的 pathinfo 函数，系统自带 pathinfo 函数在非 Windows
		系统下对包含中文路径的处理无法返回正常的值

	21:20 2009/11/21
		更新上传类中多文件上传返回错误信息的代码

	16:52 2009/11/23
		修复文件上传类中文件超出大小报错为没有文件被上传的问题。
		下一步增加上传大小限制，增加语言类以控制系统信息和报错输出。

	1:23 2009/11/24
		在配置类中增加方法 lang()，用于获取语言配置，默认语言配置为配置中的 defaultLanguage
		语言配置在 system 或 application 目录下，如果存在，程序将优先读取 application 的语言配置
		语言文件全部为 _lang.php 结尾，语言全部存于配置文件中的 $lang 数组变量中
		修改上传类中的错误信息为语言配置文件，增加上传类中文件大小限制的配置 filesizeLimit，以 KB 为单位
		修复一些错误代码逻辑错误，修改错误码为语言索引，修改错误信息处理过程

	22:49 2009/11/26
		修复 siteUrl() 函数在 PATH_INFO 方式和 index_file 为空时返回地址中出现两个斜杠的问题

	3:29 2009/11/27
		完成分页类 Multipage，同上传类一样可以在 configs 文件夹下建立默认的配置文件
		原先准备使用 MooPHP 的一个分页函数改，但写着写着就把原先的代码全弃用了，分页计算还参考了很久以前写的一款 ajax 小留言本
		最后的是相关的功能齐全，使用简单，并且基本功能比较完善
	21:11 2009/11/27
		修复分页类 numTagOpen 和 numTagClose 两个配置未生效的问题，修改第一页为没有数字链接，修改了分页演示

	2:36 2009/11/28
		修复分页类初始化时若传入的当前页数小于 1 时没有第一页的焦点的问题
		修复路由类中路由转换功能无法匹配无参数的带有正则表达的的匹配规则的问题

	23:37 2009/12/8
		修改返回的参数为语义key的数组，修改URI_Export为URIExport，并修改其中的处理过程，当URI为空时省略一些处理过程
		修改核心代码中启动控制器段的过程，解决可以直接访问继承的类中的的系统方法的问题，现在终于只能访问公开的动作（方法）了
		修复读取语言文件时，变量未能缓存到全局变量的问题，同时解决多次读取同一个语言文件时，只有第一次能读取的问题
		在演示的 common 辅助函数中增加一个 getControllerActions() 函数，用于在控制器实例化过后获取可以直接访问的动作列表

	10:57 2009/12/9
		修改和修复了关于访问控制器动作的一些小问题

	1:39 2009/12/10
		优化了系统模板解析类 SYS_Template

	1:42 2009/12/13
		修改了 vgotfaster.php 核心流程执行文件，使代码更少，注释更清晰，更整洁了
	14:30 2009/12/13
		在 URL 辅助函数 siteUrl() 中增加 $noSuffix 选项，用于返回不带后缀的链接

	14:27 2009/12/14
		修复了输入安全类(input)中获取访问 IP 的 ipAddress() 方法一个返回错误了变量的问题(此问题在无法获取IP即获取的IP为空时，返回的值并不是unknow)，并且优化了此方法。

	19:02 2009/12/17
		修复了路由类中由于URI解压中translateRoute()引用错误的变量而在 PATH_INFO 方式下无法使用路由配置的问题
		修改路由类中路由转换方法的替换方式，使用 preg_match 匹配，使用 preg_replace 替换，代码更少，更清晰高效
		修复分页类输入页数超出实际最大页数时的焦点问题，并修改了获取当前页的方法，现在只需获取当前页无需考虑安全问题，可直接传入分页配置

	17:21 2009/12/19
		增强 Loader 中的 parseView() 方法，对视图（模板）的内容捕捉（返回缓冲）完全完善了，并且优化了代码数量
		去除 Loader 中的一些变量，写到 ->_view 中，去除 Config 类 get() 方法中一点不必要的判断。
		将 MySQL_Result 资源检索类同样放到 MySQL 操作类文件中，不再由 loadClass 来返回资源，使用 new SYS_MySQL_Result($query) 返回
		优化 MySQL 操作类，去除大量代码，分离 ActiveRecord 到抽象方法中，由 MySQL 类继承
		增强 ActiveRecord 类，加强 update，分离相关方法，加强 where，新增 insert 和 delete 方法

	21:40 2009/12/20
		修复载入模板时，读取模板文件后缀配置错误的一个问题。
		修复 MySQL 操作类 ActiveRecord 中，使用 where() 第一第二参数传入单字段值时，值未被安全处理的问题并省去传入数组时归递的一些重复过程
		增强 MySQL 操作类 ActiveRecord 中 quoteValues() 方法
		优化 Loader::parseView 缓冲捕捉处理
		修改 Base 和 Interface 注释，并将类声明为 PHP5 的 abstract 抽象类
	0:21 2009/12/21
		使用以前编写的数据缓存类，增加了简易的页面指定区域自动被动缓存缓冲功能(Catch)
		应用程序示例首页中一个小修改：增加了内存使用显示，以此显示最初的框架内存占用量。
	23:54 2009/12/21
		修改 MySQL ActiveRecord::where() 当第一个参数为字符串，第二个参数为空时，直接认为第一个参数是 SQL 语句返回
		并且此修改将使其它相关 ActiveRecord 中的 where 参数都支持直接使用 SQL 语句

	03:48 2009/12/23
		新增常量 APPLICATION_PATH 和 SYSTEM_PATH，以后将逐步替换 APP_PATH 常量 和 SYS_PATH
		在应用程序类库中增加了 txtSQL 一个比较知名的文本数据库操作类，并增加该类的类似于本框架的 ActiveRecord 操作类
		可使用 $this->load->library('tdb') 加载 txtSQL 操作类，此类同时在核心关联中添加了 $this->txtSQL ，可以使用此关联直接操作 txtSQL
		默认数据目录在 APPLICATION_PATH 下的 data/txtSQL.data 目录中

	2:21 2009/12/25
		修复 ActiveRecord 中 get() 方法 where 必须为数组的问题，因为之前的改进，where可以直接传递语句。
		insert 和 update 时，如果数据未传递正确，会输出错误提示并终止运行。
		修改 query 中记录查询所有时间为秒，并且减少大量计算。
		将 input 类中，获取值第二个属性变量名改为了 $clearHtml
		vgotfaster.php 执行控制器方法可以由 call_user_func_array 函数直接调用和传递参数，但目前仍使用 eval 方法，call_user_func_array 在注释中

	1:49 2009/12/28
		[前天]修改了错误输出函数，支持不停止运行的输出
		全局增加了一个 filePutContents() 函数，更新了 common 与 loader 的类与函数的注释以支持 IDE 提示
		文件辅助函数中增加 writeFile() 函数，并且修改和 fileWrite() 函数一并调用 filePutContents() 函数
		新的缓存类开发中
	10:37 2009/12/28
		增强了 filePutContents() 函数

	1:01 2009/12/31
		支持当控制器方法名和PHP关键字冲突时，方法名后面加上 "Action" 实现同样的访问
		例如 index 控制器中的 listAction 方法，仍可以使用 index/list 访问

	22:22 2010/1/3
		完成缓存类，支持数据与页面区域缓冲缓存，并支持在 config 目录下建立 cache.php 来配置相关缓存的更新模型以及有效时间
		数据缓存可自由更新和载入，相关功能完善
		页面区域缓冲缓存可以在视图中捕捉一块区域内容进行缓存，并设立有效时间，在有效时间内全部取自缓存输出，适用于访问量大的视图中大量处理和循环
		流程执行文件中加入一小段用于计算整个程序运行时间的代码，毫秒
	10:47 2010/1/4
		分页类名称和配置改为 Pagination，更适合语义。MultiPage 适用于一个页面显示多个页面的更丰内容
		修复 loadClass() 函数载入文件时，文件不存在报错的文件名后面多了一个 .php 的问题

	3:26 2010/1/9
		修改 MySQL ActiveRecord 类中一些参数的类型和值数量判断
		修改分页类中 pageUrl 参数为已生成的URL，而不是传递给siteUrl的参数，这样更加方便于灵活控制

	22:18 2010/1/13
		一个小修改，载入视图或模板的时候，传入的变量vars不仅可以是数据，还支持对象，在内部会被自动转换成数组
		修改所有的注释为 phpDocumentor 标准

	13:56 2010/1/16
		修改 SYS_MySQL_ActiveRecord::get() 字段处理为内部方法 quoteKeys()

	1:56 2010/2/5
		优化了模板引擎对多余 <?php 标签的清理逻辑

	2:02 2010/2/7
		增加了当配置中 baseUrl 为空时，baseUrl() 函数会自动识别应用程序的相对根目录，siteUrl() 生成的链接也会使用此路径
		修改了 config.php 文件的注释及格式

	2:28 2010/2/8
		修改 MySQL 数据库操作类的一些注释，并修改了数据库的错误提示页面颜色及一点细节调整
		修改 Loader 类库和模型时返回没有&关联的实例化对象以供特殊情况下使用，但不建议此方式使用

	2:03 2010/2/10
		优化了一下生成 baseUrl 的过程， 去除了视图解压系统属性时对config的过滤，现在仅过滤db
	10:03 2010/2/10
		再次优化了 baseUrl 以及 URL Hepler 中的部分函数，减少了代码。
		Download Helper 的 headerDownload 函数增加可以设定下载指定源文件时的发送文件名称
		整理了 URL Helper 和 Download Helper 中的注释，英文

	11:17 2010/2/22
		去除缓存类中的 addslashes 方法，将 varExport 中改为 php 的 addcslashes，在第二个参数中使用 charlist: '\\\''
		再一次优化 URL 辅助函数 siteUrl
		增加一个内置函数 extend 在 common.php 中，用于合并数组配置

	11:56 2010/2/23
		再一次优化了 Input 类库
	23:45 2010/2/23
		正式修改执行动作为 call_user_func_array，并且更简洁化了一些变量名

	6:31 2010/2/28
		修复归递创建目录函数对权限的设置（这是PHP内置的函数 mkdir 函数的第二个参数不生效的问题）
		修改了缓存类中缓存名称中可以带符号 /,以目录式存储缓存
		其它一些变量名和注释的修改

	9:48 2010/3/12
		修改 template 的创建目录函数，如上次更新
		修改 MySQL 中传递 where 时，键名为数字索引时，直接将键值认为是 SQL语句
		修改 MySQL 中 row 未获取到数据时返回为 NULL (以前是 FALSE)
		增加 Benchmark(基准测试) 函数用于计算页面执行时间和使用内存等,注释原核心文件底部的计算时间程序
		整理 text 辅助函数中的代码格式

	14:48 2010/3/15
		修复 filePutContents 写入成功却返回 0 的错误(fwrite)写入成功时返回的是写入的字数

	18:04 2010/3/16
		修改 Loader 的 library 和 model，支持载入以及自动载入时，传递数组中使用键名重命名已载入的类属性
		取消原 vgotfaster.php 运行完时注销 $startd 的变量代码，以防止相关类使用析构函数时调用 benckmark 中函数得到不正常的数据
		增加一个名为 Gladius DB 的 PHP 文本数据库类，目前正在测试中

	2:44 2010/3/18
		增加系统函数 registerControllerAfterFunction(callback[,method]), 用于注册在控制器方法执行后执行的函数或方法,修改的文件有 interface.php 和 vgotfaster.php
		增加 Session 会话类(使用数据库版),使用此会话类可替代 PHP 本身的会话,只需载入类库,然后调用 data() 方法即可使用,非常方便,并参考CI加入了过期的数据垃圾回收机制
		目前 Session 类有待改善的是如果多次调用 data() 修改数据,则会产生多个数据修改查询,如使用析构或注册控制器后执行方法则一次性修改,则 MySQL Debug 时又无法正常补捉测试查询语句
		思考后,决定使用前者,因为查询语句只是一句简单的SQL,所以不会太影响性能.
		在使用此类时,推荐传递处理好的数组给 data() 一次性更新,这样更有利于优化查询数量
		config.php 中增加了相应的 session 和 cookie 配置选项,调整了一些配置的顺序, index_file 默认设置调整为 index.php
		去除了一些地方无意义的 $obj =& new Class; 的引用
	14:12 2010/3/18
		增加 Number(数字)辅助函数，目前有 formatFilesize(文件大小格式化) 与 probability(概率触发器) 函数
		修改 Session 类中在垃圾回收的基础上, 5% 的机率优化数据表

	19:24 2010/3/20
		修改视图中，允许使用 $this->db 变量获取数据库信息
		修改 MySQL ActiveRecord 中 get 方法可以使用 orderBy 来排序
		修改模板引擎使用{template ..}载入模板时，名字可以有数字和横线及下划线
		修复 URL 函数 baseUrl() 在 Linux 系统上根目录时输出两个斜杠的问题。
		优化了 getMicrotime() 计算的方式

	21:46 2010/3/26
		修改了载入模型时，如果控制器里已有属性与模型重名，若此属性为空，则仍然加载模型覆盖，不为空的情况下才不会加载

	23:00 2010/4/7
		前段日子研究了自己的图像处理类，怎么没了记录？
		图像处理类目前有 裁剪,画边框,水平垂直翻转,改变大小
		今天增加了 锐化,旋转,反色??,圆角处理 并且优化了裁剪图像
		圆角处理可以对每个角单设置是否圆角

	12:59 2010/4/11
		增强 MySQL ActiveRecord 的 quoteKeys 方法，支持 ku.COUNT(*) AS count 的字段选择 [`ku`.COUNT(*) AS `count`]
		row() 方法支持传递第一个参数为只返回一个字段的字符值

	22:01 2010/4/13
		优化了图像处理类中的 resize() 图像更平滑, 完善了invertColor() 图像反色功能，现在是真正的反色了。
		完成了文字水印功能

	23:10 2010/4/18
		整理上传类注释

	0:27 2010/4/20
		修改 siteUrl() 函数第二个参数为 $withSuffix （从是否不带后缀改为是否携带后缀，默认携带）
		更改自动载入顺序，依次是 类库->辅助函数->模型

	23:45 2010/4/21
		增加 MySQL ActiveRecord 中，quoteKeys 对 SUM() 的支持
		增加 dirTotalSpace() 和 dirCount() 两个目录辅助函数用于统计目录占用空间大小和子目录数量

	14:57 2010/4/24
		增加 time 时间函数库，增加一个 formatTimestamp() 函数用于格式化时间戳（秒数），以后会陆续增加
		同时为时间函数增加中文语言包，语言包： zh-cn/time_lang.php

	0:18 2010/5/12
		优化并增强数据库对表名的判断处理，支持 ActiveRecord 异库操作
		更新数据库注释

	12:01 2010/5/15
		修复 MySQL ActiveRecord 类中，quoteTable 逻辑错误（强制不添加前缀符号 ^ 不生效的问题）
		修复 insert 中表名左右被添加了两个 `` 的问题

	17:13 2010/6/15
		修改 Input 类中，get,post 等获取请求数据方法第二个参数为传递指定的多个函数名称，那么返回的数据将会被这些
		指定的函数过滤一遍，传递多个函数名称用符号“|”分开

	15:59 2010/6/16
		MySQL 中增加直接使用 $this->db->affctedRows() 获取受影响的行数

	2:06 2010/7/1
		增加 MySQL ActiveRecord 字段名引用处理中对 max min 的支持

	0:09 2010/7/17
		优化了 Session 库的数据表字段设计
	
	23:35 2010/7/23
		优化了 Loader 的内部 parseView() 方法，减少视图变量传递中的变量复制，减小视图传递的内存占用
		Loader 新增 vars() 方法（$this->load->vars())，可以用来预先加载视图中要用到的变量
		vars() 方法用在自动加载的模型中可以起到产生视图全局变量的功能
		可以传递一个数组或对象来传入一批变量，也可以使用 vars(name,value) 来传入一个变量
	
	3:06 2010/8/6
		修改数据库操作中 quoteTable 的一个逻辑错误。
	
	18:30 2010/8/27
		增加 array 数组辅助函数
		arrayDeepMerge() 支持PHP多维数组的深层合并
	
	1:57 2010/10/15
		修复 Loader 中，加载模型同时重命名使用了错误的变量导致 PHP 报错新名称的 Class 不存在的问题
	
	15:35 2010/10/24
		去除了 Session 中回收垃圾时一定机率优化数据表功能
	
	23:57 2010/12/11
		修改上传类加密文件名 encrypt 机制
	
	14:05 2010/12/14
		优化了路由类的文件寻找及字符处理效率
		增加控制器“重载”功能，当访问的动作不存在时，则会访问到已定义的 _overload() 动作中
		使用“重载”功能，我们可以把有时候访问必须的三段 “控制器/动作/参数” 简化成 “控制器/参数” 如：content/view/123 => content/123
		优化了 input 类的一些逻辑
		input 类增加 params() 方法，用于获取参数列表，具体功能参见注释
	
	22:36 2010/12/15
		加入框架的 GET 访问方式
		input 类中加入 URI 段返回 Assoc 数据的方法 例：name/micky/age/28 转换成 array('name'=>'micky', 'age'=>28);
	
	13:03 2010/12/16
		优化路由及核心配置文件变量名
		增加更多关于路由的设置，URI 具有更高的可定制性
	
	16:31 2011/1/11
		增加 IP 地址辅助函数
	
	15:08 2011/1/18
		修复在系统没有启用 short_open_tag 而应用程序开启了些项时载入视图的一个致使错误
	
	12:56 2011/2/12
		优化了前端文件和系统内的部分文件结构
	
	16:57 2011/2/16
		框架现在不需要 app/configs/routes.php 文件也可以运行了
	
	3:37 2011/2/17
		优化了 loadClass() 函数，修复 input 类在 php 某些配置下会提示错误的问题
		对整体的变量使用等进行了优化
		去除一些 MySQL 类属性变量数，优化数据库连接。
		修改数据库配置中默认加载配置的键名为 default_config
		优化和增强 $this->load->database() 功能，支持一个进程同时连接多个数据库并同时使用
	
	14:33 2011/2/18
		增加 FTP 类
		file 辅助函数增加 pathinfoCompat() 函数，用于替代 pathinfo() 函数（linux 系统下 pathinfo() 函数不正常）
		去除 writeFile() 函数只保留 fileWrite();
	
	21:36 2011/2/28
		修复上传类在 overwriteExtension 关闭时重命名时的一个 BUG
	
	14:26 2011/3/2
		修改路由规则顺序，现在在路由转换中无需匹配后缀
		优化了路由中去除后缀的片段
	
	17:10 2011/3/6
		现在所有模型的类名都要带上一个 Model，如 custom 模型的文件是 custom.php 类名是 CustomModel (extends Model)
	
	23:58 2011/3/7
		修改 baseUrl() 的第一个参数，siteUrl() 增加第三个参数表示是否获取绝对的地址
		（在 config.php 中设置了 base_url 时，将始终返回基于 base_url 的地址）
	
	14:39 2011/3/22
		db->insert() 支持第三个参数，当非 FALSE 时，将以 REPLACE INTO 的方式插入数据
	
	15:40 2011/4/9
		修正 Image 处理 gif 和 png 图像时透明部分变为黑色的问题，需处理时将参数 transparency 设为 TRUE
	
	17:21 2011/4/21
		修正 Image 类在使用 fgets 读取文件时使用了错误的变量名
		MySQL get() 支持 GROUP BY 了 'groupby'
	
	22:49 2011/4/27
		强制下载函数增加参数可以强制指定一个 mimetype
		完善 Session 类（主要对 session_time_to_update 维护活跃间隔时间的支持以及架构调整）
	
	19:22 2011/5/13
		404 错误页面加入 http 404 错误状态码
		MySQL 数据操作中加入 fetch() 方法，用于遍历出数查询资源中的数据记录。
	
	0:37 2011/5/17
		分页类一点修改（!!-_-)
		MySQL ActiveRecord 支持 GROUP BY 加入多字段
	
	16:10 2011/6/1
		优化模型的 _assignLibraries() 方法，修复模型对核心功能的重复加载问题
		修复 session->destory() 使用了错误的 cookie 名称问题，去除其中几个不再使用的属性
		目录辅助增加目录文件深层扫描函数
	
	0:59 2011/6/6
		修改配置 session_db_table 支持使用 ^ 设定不使用表前缀
		优化模板类，去除一些类中置有的函数使用框架辅助函数
		增加选项 template_clean_blank 设定使用模板时是否清除空行与缩进
	2:55 2011/6/6
		优化模型的 _assignLibraries() 方法，更加严格的核心对象赋值
		另一个小改动，新加载的模型也会被加载到之前加载的模型中（但暂未启用）
	13:46 2011/6/6
		Controller 父类中加载默认类库直接赋值到 $this 中而不再用 getInstance()
	
	22:06 2011/6/7
		优化类库加载方法，对无参数类库不再重复加载。
	
	11:21 2011/6/9
		修改路由类初始载入配置方法
		修改增加运行日志记录
	
	18:12 2011/6/11
		修正 FTP 类对是否设置配置的一个错误判断
		Session 设置 Cookie 增加 P3P 协议头信息，支持某些跨域情况下的设置 Cookie
		
	10:49 2011/6/21
		修复数据库 quoteValue 将类似于 25114E1478069438（无限值表达方法） 值认为是数值从而未加引号的问题
		Input 增加 uri() 方法，用于获取全局的 URI 变量中的值，内部一些方法获取值的方法修改
	
	3:26 2011/6/27
		对装载器类的一点逻辑优化
	
	23:01 2011/7/1
		完善 MySQL get() 中 order 的支持，支持多字段排序
	
	22:56 2011/7/20
		加载类库支持如 a/b/c 多层级方式
	
	15:25 2011/7/22
		完善 httpRequest() 函数，支持 https 请求，并转为系统辅助函数 network 中
		
	20:08 2011/8/22
		FTP 增加移除目录函数，可多层移除目录
		修复 input 类中对 IP 获取失败的一个细节处理
		MySQL 数据库类中，判断连接独立判断连接是否成功方法，使用 is_resource 和 mysql_ping() 处理，并优化装载器中装载数据库方法对资源连接的判断
	
	14:28 2011/11/23
		增加 Number 辅助函数 int2byte() 和 byte2int()，用以在整数和二进制字符串之间转换用，方便定长存储等
	
	19:49 2011/12/19
		增加可在多个入口文件中定义 CONTROLLER_PATH 常量，可以实现每个入口绑定各自的域名
		可在配置中使用 extend_controller 开启使用扩展控制器父类选项，在 libraries 中建立 controller.extend.php 文件
	
	21:08 2011/12/21
		修复增加控制器扩展导致的控制器文件不存在时PHP报错问题
		
	3:18 2011/12/26
		重新构造数据库 ActiveRecords 类构造字段名函数，完整支持带有函数、表名、别名的字段名称
		增加 get() 方法中 cond 参数对 offset 的支持等
	
	2:30 2012/3/4
		对 PHP 5.4 的兼容性修改，对 PHP STRICT 模式的错误修复
	
	18:02 2012/3/5
		修改 showError() 函数相关，可以输入报错调试等级显示相关调用信息
	
	15:13 2012/3/9
		修改模板引擎生成编译文件的路径，对于多重目录的模板文件不再生成到多重目录内的编译文件中。
	
	15:32 2012/3/19
		调整自动加载为 helper 优先加载
	
	11:31 2012/3/20
		修复 file 与 number 中文件大小转换函数在 php.ini 中 precision 设为更大值值的超长小数输出的问题
		
	14:50 2012/3/30
		开发完成新的数据库类，使用 PDO 驱动，轻松支持众多数据库(firebird,mssql,mysql,oci,oci8,odbc,pgsql,sqlite)，目前仅开放对 mysql、sqlite 的支持
		内置相关获取影响行数方法改名为 rowCount()，新增 begin、rollback、commit 事务相关方法等等
		ActiveRecord 增加 join() 方法，强力支持各种 JOIN 查询
	
	20:29 2012/4/2
		修复新数据库操作类中 orderby 字段带有别名时的 SQL 处理错误
		优化 join() 现在可以多次使用，多 JOIN 查询，JOIN 语句依先后调用顺序排列
	
	10:42 2012/6/30
		修复数据库操作类中选择别名表字段时 * 被添加 ` 引号的问题
	16:18 2012/7/11
		修复数据库操作类中选择表字段时COUNT(1) 中的数字  1 被添加 ` 引号的问题
	13:09 2012/7/26
		修复 FTP 类连接失败报错时的变量使用错误
	18:45 2012/10/8
		修改 array 辅助函数 arrayDeepMerge 合并数组时的顺序为按照输入数组顺序合并
	11:10 2012/10/23
		修复 forceDownload 的别名函数 headerDownload 参数传递的一个错误
	16:31 2013/1/8
		更新 network 中 httpRequest 函数，优化对 cookie 头信息的一些判断
		
	17:11 2013/1/22
		数据库 ActiveRecord 操作增加对 IN (:), NOT IN (!:), LIKE (%), NOT LIKE (!%), HAVING 的支持
		优化 PDO 数据引擎中对字符串转义的操作
	17:10 2013/1/24
		修复 SYS_Input::params() 方法中的错误
	20:11 2013/2/1
		修复数据库类 join() 对无方向 JOIN 的支持
	11:56 2013/2/4
		修复加载多个数据库配置时的默认名被覆盖问题
		加强 PDO 数据引擎 fetch() 对 PDOStatement 的检查严格度
	18:14 2013/3/11
		修改加载类库时包含多层目录名时关联中的名称错误的问题
	
	15:50 2013/7/24
		在入口文件中增加环境配置常量
		config 类：当在 configs 目录中建立以环境常量值命名的文件夹时，将优先尝试使用环境文件夹内的配置
	
	15:12 2014/3/7
		修复某些情况下数据库报错不显示详细错误信息的问题
	
	12:25 2014/7/22
		新增 http 类用以取代 network 辅助函数中的 httpRequest 函数，httpRequest 暂时保留
	14:20 2014/8/1
		使用 instanceof 代替已经过时的 is_a()
	11:37 2014/8/19
		优化 helper 加载策略

	17:45 2014/8/20
		数据库 mysql 类全面切换到 mysqli 扩展（mysql 扩展已经在 PHP5.5 中默认废弃）
	14:39 2014/9/1
		数据库类修复对 PHP5.5 preg_replace_callback 兼容支持
	14:53 2014/9/2
		修复 mysql 类中对 mysqli 调用的几个错误，增加 getDBLink() 方法
		统一为 mysql 类与 pdo 数据库类增加 getServerVersion()、getClientVersion() 方法用以获取服务端与客户端版本信息
	10:49 2014/9/3
		现可通过数据库配置文件中的 use_pdo_driver 来配置是否使用 pdo 连接数据库
		加强 PDO 对暂不支持驱动检测及错误提示
		数据库相关类从系统类库中独立，不再属于类库。
		合并数据库 ActiveRecord 类
		统一多个 PDO 与 mysqli 不相同方法
		db_result 类中增加 stmt() 方法用以获取查询返回的原始资源声明
	15:33 2014/9/4
		修复数据库操作 ActiveRecord 中 ORDER BY 对 php5.2 兼容性问题
	
	0:15 2014/10/5
		统一获取数据库连接原始对象方法名为 getConnection()，原来名为 getPdoInstance 与 getDBLink
		为 mysqli 驱动补增 begin()、commit()、rollback() 方法
	13:34 2014/10/21
		修复 mysqli 在 PHP 5.5 以下的版本中 begin() 无效的问题（PHP 5.5 以下版本 mysqli 没有 begin_transaction 方法）
	
	18:57 2014/12/22
		字符串辅助函数增加 printTextTable 函数（将数组输出为文本表格）和 strWidth 函数（计算字符可视宽度）
	
	11:25 2015/1/7
		修改数据库查询字段值加引号策略，全部加引号
		
	1:13 2015/1/17 - 2.0.0 alpha
		变化
			框架非对外类全部切入 VgotFaster 命名空间
			控制器及模型全部要求定义在 Controller、Model 命名空间中
			控制器及模型不需要 Controller 和 Model 后缀
			控制器如与关键字冲突，可使用 Controller 后缀仍可访问，保证 URL 中可以出现 PHP 的关键字
			核心控制器及模型扩展改为 core 目录中建立 Controller.php 和 Model.php 方式
			去除配置中的 extend_controller 选项，发现控制器或模型核心扩展时自动载入
			所有构造函数全部统一为 PHP 推荐的 __construct()
			去除兼容的 filePutContents 函数，使用 php 自身的 file_put_contents
			框架类文件名首字母全部大写
			新增 VF_VERSION_ID 常量
			控制器动作未找到重定向到方法名由 _overload 改为 _redirect
		优化
			优化多处控制器，模型等文件载入路径处理方式及性能
			优化多处对内部实例对象及方法过滤处理性能
			其它优化..
	
	16:15 2015/1/18
		梳理框架文件目录结构，Core 与 Library 区分
		全面支持对 Core 与 Library 进行扩展
		命名空间更准确调整，如 \VF\Library, \VF\Core
		更多代码调整
	
	17:42 2015/1/20
		各种细微性能优化（某些字符串拼接，变量使用，引用方式，路由控制器查找循环等）
		去除 extend 函数
		增加 getConfig() 函数用于框架未完全初始化前获取配置文件功能
		优化配置类，增加进程中动态修改配置功能
	
	12:50 2015/1/21
		修改加载类库时对 database 的判断方式
		PDO 实例化采用 ReflectionClass 进行动态参数长度实例化
		修复数据库类对全局类命名空间调用错误
		修改 open_short_tag 配置仅对 PHP 5.4 以下有效，PHP 5.4 已上已经默认支持使用 <?= 输出内容
		去除 benchmark 函数中的 getMicrotime() 函数，可以使用 microtime(true) 代替
	12:32 2015/1/22
		加载类库 load->library() 增加对类库构造函数多参数支持，从第二个参数起为类库实例化参数
		（基于 ReflectionClass）
		load->library 方法去除对实例更名支持
		Loader 增加 libraryAs 方法支持对实例化名称老进行更名，并且支持从第三个参数开始作为类库实例化参数
		（由原 private loadLibrary 方法变更而来）
	22:21 2015/1/25
		修复缓存类在新的配置类出现的不兼容问题（此类库目前比较粗糙，需做改造）
		修复缓存类删除缓存出错的问题，优化删除缓存时的文件删除逻辑
		修改 URL 辅助函数中的注释，更利于 IDE 提示，优化 baseUrl() 弱微性能
		修复 Input 获取输入内容时无法获取两次的问题
	1:03 2015/1/26
		优化 baseUrl() 函数对于绝对路径的处理
		
	17:54 2015/2/7
		修复加载 $this->load->library() 时，第一个参数是数组时产生的错误
	23:59 2015/2/8
		修复文件上传类调用老获取配置方法时的错误
		getConfig() 函数增加第二个参数用于忽略配置文件加载的错误
	
	11:13 2015/2/14
		模型的方法中支持实时加载其它模型并且立即调用，又一强大特性。
		针对 IDE 提示的 phpDocument 注释增加。
		
		