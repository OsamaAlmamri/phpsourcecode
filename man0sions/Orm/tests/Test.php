<?php
/**
 * Created by PhpStorm.
 * @author Luficer.p <81434146@qq.com>
 * Date: 16/10/12
 * Time: 下午2:48
 */

namespace LuciferP\Orm\tests;


use LuciferP\Orm\base\Registry;
use LuciferP\Orm\models\Users;

class Test extends \PHPUnit_Framework_TestCase
{
    private $name = 'phpunit';

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub


        $db_conf = [
            'master' => [  //配置主数据库
                'host' => '192.168.10.10',
                'user' => 'mysqluser',
                'passwd' => 'mysqlpasswd',
                'dbname' => 'wxbdb',
            ],
            'slave' => [   //配置从数据库,可以无限多个

                [
                    'host' => '192.168.10.10',
                    'user' => 'mysqluser',
                    'passwd' => 'mysqlpasswd',
                    'dbname' => 'wxbdb',
                    'slave' => '1',
                ],
                [
                    'host' => '192.168.10.10',
                    'user' => 'mysqluser',
                    'passwd' => 'mysqlpasswd',
                    'dbname' => 'wxbdb',
                    'slave' => '2',
                ]
            ]


        ];
        Registry::set('db_conf', $db_conf);
    }

    public function testCreate()
    {
        $user = new Users();
        $user->name = $this->name;
        $user->create();

        $attributes = $user->getAttributes();

        $this->assertEquals($this->name, $attributes['name']);

    }

    public function testFind()
    {
        $user = Users::model()->fields(['*'])->where(['name' => $this->name])->find();
        $attributes = $user->getAttributes();
        $this->assertEquals($this->name, $attributes['name']);
    }


    public function testUpdate()
    {
        $user = Users::model()->fields(['*'])->where(['id' => 10])->find();
        $user->name = "test";
        $user->update();
        $newuser = Users::model()->fields(['*'])->where(['id' => 10])->find();
        $attributes = $newuser->getAttributes();

        $this->assertEquals('test', $attributes['name']);
    }

    public function testDelete()
    {
        $user = Users::model()->fields(['*'])->where(['id' => 11])->find();
        if ($user->getAttributes()) {
            $user->delete();
        }

        $duser = Users::model()->fields(['*'])->where(['id' => 11])->find();
        $this->assertEquals([],$duser->getAttributes());


    }
}
