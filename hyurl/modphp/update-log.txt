【ModPHP 更新日志】
版本 2.3.0 (2017-7-15 1:30)
1. 新增 path_starts_with() 函数用来判断一个路径是否以某字符串开头，Windows 中不区分大小写。
2. 不再建议使用 strapos() 函数，可能会在未来版本中移除。
3. 移除常规配置项 site.maintenance，不再支持将某个页面设置为维护页面。
4. 推荐使用 <!-- CONTENTS --> 替代 __CONTENT__ 来作为布局模板的内容占位符。
5. 修复 Image 扩展和 Mail 扩展的一些 BUG，Image 扩展能更好地支持远程图像资源。
6. 新增 Image::readFromDataURL() 方法用来从经过 base64 编码的 Data URI Scheme 数据
   中读取图像；Image::getBase64() 方法重命名为 Image::getDataURL()，原方法名作为别名
   继续使用。
7. 挂钩机制支持在 Api 上绑定类和方法名，如果绑定的是类，则尝试将类作为函数调用，需要在
   类中定义 __invoke() 方法。

版本 2.2.9 (2017-7-6 16:10)
1. database 扩展在连接数据库时，可以设置 timeout 选项来规定连接的超时秒数，默认 5。
2. template 模板引擎自定义标签的 data 属性也可以处理常量。
3. 优化程序。

版本 2.2.8 (2017-7-4 20:00)
1. 新增 MOD_ZIP 常量，如果设置，ModPHP 将从设置的 ZIP 文件中加载内核。
2. 新增 __CORE__ 常量用来表示 ModPHP 内核目录，默认等于 __ROOT__/mod/；如果 ModPHP
   内核在 ZIP 中，则内核目录为 zip://__ROOT__/MOD_ZIP#mod/。
3. 修复运行在 PHP 内置服务器时存在的 BUG。

版本 2.2.7 (2017-7-4 12:27)
1. 完全移除 __TIME__ 常量。
2. load_config() 函数不再建议使用第二个参数，而是将第一个参数设置为绝对路径的方式，来
   载入绝对路径下的配置。
3. 修复 array2xml() 函数的 BUG。
4. 修改 load_config() 函数的行为，现在它用来引入任何目录下的配置文件，并且支持 XML 文档。
5. function_alias() 函数支持命名空间。
6. 新增 zip_list() 函数用来列出一个 ZIP 压缩文件夹中的所有文件。
7. 只有在常规配置 mod.debug 为开启状态时，才自动恢复丢失的文件。

版本 2.2.6 (2017-7-2 22:20)
1. 新增 http_digest_auth() 来进行 HTTP 摘要认证。
2. http_auth_login() 函数支持 $reaml 参数和 $type 参数，前者用来自定义域信息，后者
   用来设置认证类型(1: 基本认证；2: 摘要认证)，摘要认证仅支持系统未安装的情况。
3. 可以将 mod.httpAuth 设置为 2 来使用全局 HTTP 摘要认证登录账户。
4. 新增常规配置 user.password.encryptKey 用来设置使用 HTTP 摘要认证方式登录账户时，
   加密用户密码所使用的密钥，加密函数使用 encrypt()。
4. 修复一些 BUG。

版本 2.2.5 (2017-7-1 12:00)
1. 新增 HTTP 访问认证登录服务。并且包含这些函数：
   (1) report_401()      报告 401 未授权错误
   (2) http_auth_login() 快速进行 HTTP 访问认证登录
2. 即使系统未安装，也能够通过 HTTP 认证进行用户登录、登出和获取当前用户信息的操作。
   并且能够使用下满这些函数：
   (1) _user()      保存和获取用户模块元信息的函数
   (2) get_me()     获取当前登录用户信息的函数
   (3) is_logined() 判断用户是否登录
   (4) is_admin()   判断是否为管理员
   (5) is_editor()  是否为网站编辑
   (6) is_profile() 是否为用户详情页面(如果有)
3. 常规配置中添加了 mod.httpAuth 选项来设置是否开启全局 HTTP 访问认证，如果开启，
   则必须要进行登录才能访问站点。同时添加了配置文件 users.php 来设置本地用户数据，如果
   系统未安装，那么进行登录等操作使用这些用户；如果系统已安装，则始终使用数据库中的用户。
4. 其他细节优化，修复一些 BUG。

版本 2.2.4 (2017-6-30 16:34)
1. 常规配置项 mod.debug 也可以设置为 3，在浏览器控制台中显示程序运行的相关信息。
2. curl() 函数支持批处理请求，可以将 $options 参数设置为多个请求选项（数组）来同时并行请求；
   批处理的返回值是一个数组，包含所有请求的结果。同时添加第二个参数 $wait 来设置将并行请求
   转换为顺序请求，并设置每个请求的超时时间。
3. curl_info() 函数不再支持第二个参数。在 curl() 函数用来执行批处理请求时，curl_info()
   和 curl_cookie_str() 都将返回一个对应每个请求的索引数组。
4. 即使未开启 Fileinfo 扩展，mime_content_type() 函数也可用，但是需要依赖配置目录下的 
   mime.ini 文件，但该文件是不全面的，因此推荐开启 Fileinfo 扩展，或者自己添加更全面的 
   mime.ini 文件到 __ROOT__/user/config/ 目录下。

版本 2.2.3 (2017-6-29 12:00)
1. 新增 extname() 函数用来获取一个文件名的扩展名(始终小写)。
2. 可以通过将常规配置中的 file.upload.keepName 设置为 true，在上传文件时默认按原文件名保存，
   如果遇到文件重名，将自动在文件名末尾添加 MD5 后缀。 默认 false，只采用 MD5 方式命名保存文件。
3. 新增 is_ascii() 函数用来判断一个字符串是否只包含 ASCII 字符。
4. 某些类扩展和函数扩展仅在依赖的 PHP 扩展被载入的情况下有效，如 Image 类需要在 GD 库启用时
   才有效，SocketServer 类需要 sockets 扩展启用时才会被引入，curl() 函数需要在 CURL 扩展
   启用时才被定义，等等。
5. 修复开启 pathinfo 模式时 URL 解析失败的 BUG。

版本 2.2.2 (2017-6-28 17:30)
1. 新增 INIT_MEMORY 常量存储程序初始时的内存占用量（单位 Byte），新增 INIT_TIME 存储
   初始运行时间，__TIME__ 常量不再建议使用，将在未来版本中删除。
2. 新增 get_module_funcs() 函数用来获取自动创建的模块函数。
3. database::set('queries') 可以获取数据库查询语句的执行次数，但仅记录 database::query()
   方法，或 database:: select() 等所执行查询次数，不会记录使用其他方式执行的查询，
   并且这是一个只读属性。
3. 添加 mod.client.call.complate API，在通过 URL 调用类方法之后执行回调函数，函数支持
   一个参数，即操作结果。
4. 常规配置项 mod.debug 也可以设置为 2，来使页面显示或 Ajax 返回程序运行的相关信息，
   注意这些信息中所指的内存消耗并不包括 PHP 解释器自身的内存消耗，并且由于程序此时依旧
   处于运行状态，实际上程序内存的消耗会比显示的更多些。
5. 新增 get_request_headers() 和 get_response_headers() 函数，前者用来获取 HTTP 
   请求头信息，后者用来获取响应头信息。
6. 修改 is_proxy() 函数的行为，它现在用来判断客户端是否使用代理服务器访问；
   新增 is_proxy_server() 函数用来判断 ModPHP 是否被当作代理服务器运行。

版本 2.2.1 (2017-6-26 2:00)【重要】
1. 修复 file::save() 方法和 image::save() 方法在保存文件时存在的 BUG。
2. 新增函数 is_robot() 用来判断请求是否来自搜索引擎的爬虫机器人。
3. 自动加载类文件时，除了尝试按小写类名加载外，还尝试按调用的类名加载。同时，优先加载
   用户目录下的类文件，这意味着你可以重写某些系统内置的类。
4. 改变 encrypt() 和 decrypt() 函数的行为，增加第三个参数 $expire 来设置密码有效期。
5. 完善 PHPDOC 文档，doc() 函数也支持查询类的文档，示例如 doc('template::')。
6. 新增 mod.debug 配置项，默认 true，显示错误信息；mod.jsonSerialize 默认为 true。
7. 函数 load_config_file() 更名为 load_config()，并支持载入 json 配置文件，同时支持
   第二个参数设置配置文件的查找目录，原函数名作为别名继续使用；除了常规配置文件
   config.php 外，其他配置文件在从用户配置目录载入后就不再载入内核配置目录中的配置。
8. 如果有，则只加载用户语言包，不再加载并与内核语言包合并，默认语言使用英文（美国）。
9. url() 函数在获取包含中文的 URL 地址时，不再对其进行解码。
10. 从该版本起，仅在通过 mod.php 的 URL 请求中转换 $_GET, $_POST 和 $_REQUEST 参数。
11. 优化程序并修复一些 BUG，性能和安全性提升。
12. 新增 config2list() 函数用来获取配置项的点语法列表。
13. _{module}() 系列函数中不再存储 Api Hooks 信息。
14. mod::get()、mod::getMulti()、mod::search()、mod::getPrev()、mod::getNext() 何以
    在子类中重写。

版本 2.2.0 (2017-6-22 14:15)
1. 内置 Socket 服务器也可以通过发送二进制数据来上传文件。
2. 修复 file::upload() 方法在处理 Data URI Scheme 数据时可能出错的 BUG，并修复系统
   未安装时不会自动复制更多尺寸图片的 BUG。
3. 修复 file::delete() 方法在删除文件时的 BUG，仅允许删除上传的文件。
4. 新增一组加密/解密函数 encrypt() 和 decrypt()。
5. 默认不设置 Session 名称(即使用 PHP 默认值 PHPSESSID)，交互式控制台行前提示符修改为 >>>。
6. 不再一次性加载所有类文件，而使用 spl_autoload() 自动加载，但要求类文件命名为 
   <classname>.class.php。
7. 不再使用输出缓冲区来引入模板文件，因此需要确保在模板引入之前不应有任何输出。
8. ModPHP 能够作为代理服务器运行，新增 is_proxy() 函数用来判断是否运行为代理服务器。

版本 2.1.9 (2017-6-18 18:15)
1. 改进 SocketServer 扩展，删除 $maxInput 属性并固定限制传入数据的大小为 1/4 内存限制。
2. SocketServer::on('message', function($event){}) 中，$event['dataType'] 修改为
   type，并且新增 size => 数据大小 键值对。
3. 能够更好的处理 WebSocket 心跳帧和追加数据帧，但由于各浏览器实现的情况不同，追加数据帧
   并不可靠，目前测试仅 Firefox 能够使用，因此尽量避免使用此技术，而使用手动分段上传的
   方式上传大文件。
4. 修复在系统未安装时，内置 Socket 服务器无法使用的问题。

版本 2.1.8 (2017-6-6 8:00)
1. 修复系统未安装时访问不存在的页面时总是显示网站主页面的 BUG。
2. 当通过 Data URI Scheme 上传文件时，可以提供 file_name 字段作为文件数据保存的名称。
3. 即使未安装，也可以使用 file::upload() 方法来上传文件，但是不会触发 add_hook() 
   函数所绑定的回调函数。同理，也可以在未安装时使用 file::delete() 方法删除文件。
4. file::upload() 支持分段上传文件，操作过程如下：
   1）在浏览器客户端，可以使用 blob 对象分隔文件为固定大小（最后一段除外）；
      也可以使用 Data URI Scheme 方式上传，对数据字符串进行分隔；
   2）分段上传文件和普通上传相同，但需要提交一个 file_name 参数作为文件数据保存的名称；
      上传后服务器会返回文件的保存信息，其中包括一个 file_src 字段表示文件的存储路径。
   3）除了第一个文件片段外，其余片段上传时需要额外提交一个 file_src 字段，用来指向需要
      追加数据的文件；
   4）在使用分段上传时，只有上传第一段文件时会返回文件的全部相关信息，其他段则只返回
      客户端发送的信息和文件的信息，不包括数据库记录信息。
   5）为验证用户有权限在文件后追加数据，在系统安装后可以通过 file.save 接口来判断，
      分段上传时，file.save 接口所绑定的回调函数的参数中也包含 file_src 属性。
      如果系统未安装，则需要另寻窍门。

版本 2.1.7 (2017-6-5 16:40)
1. 修复数据不一致带来程序崩溃的 BUG。
2. staticuri() 函数设置文件的伪静态时，可以设置为一个绝对路径（以 / 作为目录分隔符）。

版本 2.1.6 (2017-6-1 19：33)
1. 采用新的方式检测版本更新。
2. 新增 API user.login.complete, file.add.complete, mod.update.compete；修复调用
   category::getTree() 方法时 category.get.before API 无效的问题。
3. 修复在 SQLite 数据库中无法通过 mod::update() 方法更新数据表结构的问题。
4. 修复 is_ajax() 函数在 Firefox 和 Safari 浏览器上判断错误的问题。

版本 2.1.5 (2017-5-31 0:34)
1. 修复网址中存在非拉丁字符时 url() 函数无法正确获取 URL 地址的问题。
2. 修复 import() 函数将 svg 当作普通图像引入的问题。

版本 2.1.4 (2017-5-29 23:50)
1. 修复模板引擎错误将 <iframe> 标签当作 <if> 标签进行解析的 BUG。

版本 2.1.3 (2017-5-28 23:32)
1. 恢复总是编译模板的功能，将 config('mod.template.compiler.enable') 设置为 2 开启。

版本 2.1.2 (2017-5-26 15:05)
1. 修复网站运行在虚拟目录中时无法加载系统的问题。
2. 修复 pathinfo 模式中自定义链接失效的问题。

版本 2.1.1 (2017-5-25 10：40)
1. 修复使用 add_hook/add_action() 函数动态添加的类方法在遇到错误时无法返回运行结果的 BUG。

版本 2.1.0 (2017-5-18 19:00)
1. 在系统安装之前，不再自动引入默认模块的类文件和函数文件，也不再自动生成与模块
   有关的函数。
2. 彻底移除不再建议使用的类、函数以及变量，其中包括 WebSocket, hash_verify(), 
   rand_ip(), cn_rand_ip(), $WS_INFO, $WS_USER。
3. 优化 database::parseWhere() 方法。
4. 修复在 PHP 内置服务器中无法进行网页安装的问题。

版本 2.0.9 (2017-5-8 8:00)
1. 使用 password_verify() 函数取代 hash_verify() 函数，前者在 PHP 5.5+ 中为内置函数，
   后者依旧可用，但已不再推荐，因为与 password_verify() 功能重复，将在未来版本中被移除。

版本 2.0.8 (2017-5-7 14:05)
1. 修复在 sqlite 数据库环境下，mod::getMulti() 方法无法获取随机数据的问题。

版本 2.0.7 (2017-5-6 10:57)
1. 完善交互式控制台。

版本 2.0.6 (2017-5-5 12:03)
1. 新增 doc() 函数用来查看函数或者类方法的 PHPDoc 程序文档。

版本 2.0.5 (2017-5-4 13:14)
1. 交互式控制台如果遇到错误无法打开，将报告错误原因。
2. rand_ip() 和 cn_rand_ip() 不再建议使用，可能会在未来的版本中移除。
3. 优化一些其他的代码。

版本 2.0.4 (2017-5-2 17:10)
1. 修复交互式控制台中输入中文报 iconv 错误的问题。
2. 修复 array2xml() 函数的 BUG，支持索引数组。
3. 修复 parse_header() 函数 BUG。
4. 新增 get_local_ip() 函数用来获取本地 IP 地址。
5. 修复交互式控制台中与 ModPHP 服务器的连接无法建立时因为检测更新而导致程序被挂起的问题。

版本 2.0.3 (2017-5-2 1:35)
1. 新增 ping() 函数用来测试一个远程服务器能否被连接。
2. 新增 is_console() 函数用来判断当前是否运行在交互式控制台中。
3. 交互式控制台中 update() 函数可以用来重新安装当前版本，在程序文件丢失等情况下很有用。
4. 完善 curl() 函数在充当代理时的行为。
5. 修复 is_ajax() 函数的 BUG。
6. 重新定义 array2xml() 函数，新函数支持两个参数 $array 和 $cdata，后者设置是否使用 CDATA 包裹数据。
7. 新增 xml2array() 函数用来将 XML 结构化数据转换为数组。

版本 2.0.2 (2017-4-30 19:35)【重要】
1. 该版本进行了优化代码、完善算法，并且增加更多注释以便提高源码可阅读性。
2. 新增 get_cmd_encoding() 函数用来获取 Windows 命令行编码，并移除常规配置中的 mod.cliCharset 配置项，
   同时删除 SocketServer::$cliCharset 属性。
3. file::upload() 方法可以通过设置 [file] 参数为数组同时传送多个文件，并修复文件 file::open() 方法
   打开文件无法获取创建/修改时间的 BUG。
4. 修复 database::parseWhere() 方法的 BUG。
5. 修复 mail 扩展在自动生成发件人地址时的 BUG。
6. 模板引擎移除去除注释的功能，因为该功能并不完善。
7. 禁止通过 URL 直接访问模板函数文件。
8. 修复 get_upload_files([string $key]) 函数在传入 $key 参数时无法获取意料值的 BUG。
9. xcopy() 函数增加第三个参数 $cover，来决定是否覆盖已有文件，true: 覆盖，false 跳过（默认）。
10. 修复 zip_compress() 函数无法压缩空白文件夹的 BUG。
11. export() 函数在输出变量信息时，如果是 ajax 请求，则不再高亮代码。
12. is_img() 函数新增别名 is_image()。
13. 新增 object2array() 和 array2object() 函数，用来进行数组和对象的相互转换。
14. 修复通过命令行运行 mod.php 总是进入交互式控制台的 BUG。
15. add_hook()，remove_hook()，do_hooks() 函数不再有返回值，因为其运行过程不会被阻塞。
16. 修复运行在多线程 Socket 服务器模式时，is_client_call() 无法正确判断、mod.init Api 挂钩的函数
    过早运行等问题。
17. Api console.open 所绑定的回调函数不再传入参数，如需终止程序，使用 error() 函数。
18. 新增一些用来获取软件信息的函数，如 update_log()、license()、readme()，它们只在交互式控制台中有效。
19. 将 modphp.bat 文件重命名为 Start-ModPHP.bat。
20. 交互式控制台中新增变量 $ENCODING(命令行编码，仅 Windows), $TITLE(窗口标题，仅 Windows),
    $PROMPT(行首提示符)，修改它们将会立即对控制台产生影响。

版本 2.0.1 (2017-4-24 12:00)【重要】
1. 通过 Ajax 等手段远程跨域访问 mod.php 程序时，也允许提供 HTTP_REFERER 参数用来自定义来路页面。
2. 新增 SocketServer 类来替代 WebSocket 类实现 Socket 服务器，WebSocket 类成为该类的别名，
   由这个类建立的 Socket 服务器会自动判断客户端是否使用 WebSocket 协议，从而对其采取不同的响应策略
   (1) 如果客户端使用 WebSocket 协议，则按照该协议进行数据的编码、解码等操作;
   (2) 如果客户端不使用 WebSocket 协议，则使用下面的简单协议进行数据传送：
       ① 在握手时，由客户端发送任意数据到服务器，服务器将其原样返回，来表示接受连接；
       ② 为兼容所有编程语言，传输的任何数据都应显式转换为字符串，例如使用 base64 编码来发送文件。
3. 新增 is_socket() 函数替代 is_websocket() 函数，is_websocket() 函数依旧可用但已不受推荐，
   未来版本可能将移除或者更改其行为。
   相同地，WebSocket 类也可能在未来版本中移除，因此不再建议使用它，请直接使用 SocketServer 类。
4. ws.php 程序文件修改为 socket-server.php，并且将其中与 WebSocket 有关的 API 接口依次修改为：
   WebSocket.open -> socket.open
   WebSocket.message -> socket.message
   WebSocket.error -> socket.error
   WebSocket.close -> socket.close
5. 全局变量 $WS_INFO 和 $SOCKET_INFO 分别修改为 $SOCKET_INFO 和 $SOCKET_USER，原变量名依旧可用，
   但不再推荐使用，将在未来版本中移除。
6. 常规配置中的 mod.WebSocket 配置项更改为 mod.SocketServer，新增 mod.SocketServer.maxInput 选项

版本 2.0.0 (2017-4-18 21:16)
1. 图像扩展新增 image::getBase64() 方法用来获取图像的 base64 密文(以 data:image/png;base64 开头)
2. SessionId 也可以通过 GET 或者 POST 方式传递，更适应 ajax 跨域访问。

版本 1.9.9 (2017-4-12 1:41)
1. 修复模板中定义函数时，函数内部无法通过 global 关键字引用全局变量的问题。
2. report_403/404/500 系列函数不再支持直接在模板中进行调用，如果需要将某个页面设置为此类错误页面，
   需要通过 mod.init 接口或者 mod.template.load 接口设置回调函数来实现。

版本 1.9.8 (2017-4-9 13:56)
1. 修复数据库扩展在某些 PHP 版本中报属性不受支持的错误的问题。
2. datanbase::info() 返回的数组中新增 dirverName 和 connection 元素，后者是当前 PDO 连接的引用。

版本 1.9.7 (2017-4-6 23:31)
1. 完善邮件扩展，发送匿名邮件（不登录 SMTP）时不再需要显式设置 auth 选项为 false，
   但必须将 host 选项设置为空或者不设置。
2. 修复客户端判断函数的 BUG，is_browser() 判断能力提升。

版本 1.9.6 (2017-4-5 12:10)
1. 新增数据库自动断线重连功能。
2. 连接数据库后自动设置 PDOStatment::fetch() 方法默认返回关联数组。

版本 1.9.5 (2017-4-5 0:54)
1. 新增 config('mod.jsonSerialize') 选项，决定是否使用 JSON 来取代 PHP 内置的方式来序列化数据，
   默认 false，未来版本可能修改为 true，因为 JSON 更为通用，因此建议从现在起使用 JSON。
2. 修复交互式控制台中自动检测更新的 BUG。

版本 1.9.4 (2017-4-4 19:00)
1. 模板编译器会自动判断模板是否被修改从而自动更新编译文件，不再需要将
   config('mod.template.compiler.enable') 选项设置设置为 1 或 2，可选值只为 true/false。
2. 修复禁止前台访问方法的漏洞。

版本 1.9.3 (2017-4-4 14:18)
1. 修复邮件扩展在不登录 SMTP 服务器时无法将邮件发送给抄送人和密送人的问题。
2. 新增 mail::debug() 方法用来快速开启或关闭邮件扩展的调试模式。
3. mail::$error 在发送邮件时按收件人邮件地址作为键名保存错误信息，方便判断是否发送成功。
4. 发送匿名邮件（不登录 SMTP）时，不再需要调用 mail::connect() 方法，可直接发送。
5. 交互式控制台自动检测新版本。

版本 1.9.2 (2017-4-3 16:42)
1. 邮件扩展新增发送邮件的附件支持，由 attachment 选项设置，值为一个文件名或数组（多文件），如
   mail::set('attachment', array('file1.txt', 'file2.txt'));
2. 支持不登录 SMTP 服务器而直接发送邮件（程序模拟 SMTP），使用时，需要先设置收件人地址，
   并且将 auth 选项设置为 false，然后再调用 mail::connect() 方法以及其他方法准备和发送邮件。
   注：收件人的邮件服务器可能会拒绝接收以这种方式发送的邮件，如果你使用的是一个动态的 IP 地址。

版本 1.9.1 (2017-4-2 18:00)
1. 更新 database::open() 方法，去除第二个参数，URL 描述支持更多数据库类型（除 ODBC 外）；
   支持 dsn: 或者 file:/// 为前缀的绝对 URL 地址指向一个本地 DSN 描述文件；
   或者直接使用 database::open("sqlite:dbname.db") 的方式打开一个本地数据库文件。
2. 更新 database::update() 和 database::delete() 方法，添加更多参数使其支持 Order By 和 Limit 限制。

版本 1.9.0 (2017-3-31 23:19)
1. 新增 console.open API，可以绑定回调函数在试试控制台打开之前调用，如要求用户登录等。回调函数支持一个布尔型参数，
   当回调函数返回 fasle 或者回调函数内部发生错误时，程序将会立即退出，试试控制台打开失败。
2. 修改 user.logout API 在用户登出完成（session 被关闭，cookie 被清除）后再调用。

版本 1.8.9 (2017-3-30 11:08)
1. 修复连接数据库时存在的 BUG。

版本 1.8.8 (2017-3-29 18:40)【重要】
1. 将模板引擎的非输出表达式 {!expression} 修改为 !{expression}，该修改是不兼容旧表达式的，因此
   如果你使用 ModCMS，请通过更新 ModCMS 的方式进行更新而不是直接更新 ModPHP 内核。
   如果进行更新，需要手动将模板中的旧版表达式全部修改为新版表达式并清除缓存（ModCMS 内置模板不需要）。

版本 1.8.7 (2017-3-29 13:22)
1. mail 扩展新增 open()、conenct() 和 close() 方法，open() 方法支持一个 url 作为参数，用来设置连接信息
   如：mail::open('smtp://smtp.qq.com:465?ssl=true&username=12345@qq.com&password=abc12345&ssl=true')
   如果 url 中设置路径（path）则表示打开的信箱文件夹，只在连接收件服务器时有效。
   connect() 是 login() 的别名，close() 是 logout() 的别名。
2. database 扩展的 open() 方法增加新特性，也支持传入一个 url 作为参数，用来设置连接信息
   如：database::open('mysql://localhost/modphp&username=root')
   其中 mysql 表示数据库类型，modphp 表示连接的数据库名称。
   如果后面需要将连接切换到该连接，则只需要 database::open('localhost')，而不需要完整的 url。

版本 1.8.6 (2017-3-29 0:30)
1. 修复 image 扩展在创建图像时不设置背景颜色就无法设置透明度的问题。
2. 修复 mail 扩展无法使用 ssl 协议连接邮件服务器的问题，
   可以通过将 host 设置为 ssl://smtp.example.com 的方式或者设置 ssl 为 true 来进行连接。

版本 1.8.5 (2017-3-28 16:46)
1. 修复一些 BUG。

版本 1.8.4 (2017-3-28 8:00)【重要】
1. 修复多线程环境下的错误，真正实现多线程运行 WebSocket 服务器（代码参考 WebSocketThread.php），
   或直接运行 WebSocketThread.php 并使用默认的 WebSocket 逻辑。
2. 将 mysql.class.php 扩展更换为 database.class.php，后者使用 PDO 并支持多种数据库，
   可以将 ModPHP 安装在 MySQL 或 SQLite 数据库中。
3. 因为有较大改动，所以请谨慎升级，例如：
   (1) 不再支持 mysql 类，如果你的网站的某些程序使用这个类，则需要手动将其修改为 database;
   (2) database::query() 以及 select()、update() 等方法返回志为 PDOStatement 而不是 mysqli_result,
       即需要手动修改代码中的 fetch_assoc() 和 fetch_object() 方法非别为 fetch(PDO::FETCH_ASSOC) 
       和 fetchObject();
   (3) 如果你使用 ModCMS，那么请使用 ModCMS 的更新包，而不是直接更新 ModPHP。

版本 1.8.3 (2017-3-24 0:40)
1. 命令行开启 WebSocket 服务器时可以使用第三个参数设置临时端口，如 php ws.php 8000
2. Windows 下的 modphp.bat 引导更新，可以选择进入交互式控制台、开启内置服务器（PHP5.4+）
   或者开启 WebSocket 服务器
3. 修复一些 BUG 并完善一些函数。

版本 1.8.2 (2017-3-23 17:00)
1. 添加对 PHP 内置服务器的支持，启动时以 index.php 为路由配置，如 php -S 0.0.0.0:80 index.php。

版本 1.8.1 (2017-3-22 8:00)
1. 修复一些 BUG。

版本 1.8.0 (2017-3-20 12:48)
1. 解决在某些版本的 MySQL 数据中无法插入数据的问题。
2. 修复 Mail 类进行邮件地址编码时在高版本 PHP 中报错的问题。

版本 1.7.9 (2017-3-19 11:04)
1. 完善 report_403/404/500() 系列函数，别且在非客户端坏境下仅显示简单信息。
2. 移除 mod.template.load.{error_code} 系列 Api，统一使用 mod.template.load。

版本 1.7.8 (2017-3-18 21:56)
1. WebSocket 模式下也对提交的参数进行转义，并修复之前存留的问题。

版本 1.7.7 (2017-3-18 12:35)
1. 修复在命令行中启动 WebSocket 模式时可能报错的问题。
2. 修复交互式控制台中使用 shell 格式的命令可能报错的问题。

版本 1.7.6 (2017-3-10 0:55)
1. 修复在使用链接来设置 Document Root 时无法检测并获取运行文件名以及网站路径从而
   引起无法使用程序的问题。
2. 修复安装页面中因为不能解析域名而报警告的问题。
3. 在 AndroPHP 环境(基于 Fast-CGI)下检测通过，这意味这你也可以在手机上搭建 PHP 服
   务器并使用 ModPHP 搭建网站。

版本 1.7.5 (2017-3-9 13:45)
1. array2path() 函数返回值中所包含的路径分隔符使用操作系统默认的分隔符，
   并且支持通过设置第二个参数来设置父目录或使用绝对路径。
2. 交互式控制台中使用 $ 来替代 modphp> 作为命令行符号，因为它对于 PHP 有更特殊的意义。
3. 修复在某些版本的 PHP 中，zip_compress() 函数报错的问题。
4. rand_ip() 函数不再返回中国大陆的 IP 地址，而是一个通用的 IP 地址。
   cn_rand_ip() 函数用来返回中国大陆的随机 IP 地址。

版本 1.7.4 (2017-3-5 22:30)
1. 修复 file::open() 方法再次打开文件时不将原有内容清除的问题。

版本 1.7.3 (2017-3-4 18:24)
1. 新增 parse_cli_str() 函数用来解析命令行传参格式的字符串为数组
2. 交互式控制台也支持 Shell 命令语法，但不支持管道、输出重定向等操作系统所特有功能。
3. 新增 image::getBinary() 方法用来获取图像的二值化文本，并将 image::imagecreatefrombmp()
   和 image::imagecopymergealpha() 方法调用权限设置为 public。

版本 1.7.2 (2017-3-3 17:05)【重要】
1. 修复 WebSocket 在 PHP 5.4 之后无法连接的问题。
2. 为多线程进行优化，新增 WebSocket::start() 方法，WebSocket::listen() 方法添加
   第三个参数 $autoStart，默认 true。
   如果 PHP 使用了多线程扩展，可以将 $autoStart 设置为 false,
   然后在 Threaded::run() 中调用 WebSocket::start() 方法。
3. 新增 WebSocket::$maxInput 和 WebSocket::$cliCharset 属性分别用来设置最大传入字节数
   和操作系统命令行所支持的字符集。
4. 新增配置项 config("mod.WebSocket.port") 用来替代 config("mod.websocketPort"),
   以及 config("mod.WebSocket.maxThreads") 用来设置默认 WebSocket 模式的最大线程数。
5. 新增保留类名 WebSocketThread 用来实现默认 WebSocket 模式的多线程支持。
6. 注意不要在 WebSocket 模式下进行任何直接输出，否则 Session 将会重启失败，
   如果通过命令行启动，可以使用 fwrite(STDOUT, "string") 的方式向控制台输出内容。
   你需要自己为 PHP 添加多线程扩展才能实现多线程能力。
7. 修复了 str2bin() 函数在高版本 PHP 中报错以及 bin2str() 函数在遇到换行符时乱码的问题。

版本 1.7.1 (2017-3-1 12:35)
1. 修复在 PHP 5.5 之后报不再支持 /e 标记的正则表达式的问题。
2. 类继承时不再忽略严格性检查。
3. 修复在高版本 PHP 环境下的一些其他的 BUG。

版本 1.7.0 (2017-2-24 1:40)
1. 修复初次运行报 user/ 目录不存在的 BUG。
2. 初次运行不再自动跳转到 install.php 文件。

版本 1.6.9 (2017-2-23 19:38)
1. 变量 $init['__DISPLAY__'] 也可以设置为绝对路径，但目录分割符必须是 /。
2. 修复之前的更新导致维护页面不报告错误的 BUG。

版本 1.6.8 (2017-2-22 8:00)
1. 修复默认 WebSocket 模式中客户端关闭后服务器不删除 $WS_USER 中的连接资源的 BUG。
2. $WS_USER 变量以及 WebSocket 事件的回调函数参数中的客户端资源使用引用值。
3. 去除 $WS_SESS、$WS_HEADER 变量，使用 $WS_INFO 替代。
4. 控制台模式下 report_403/404/500() 函数不结束程序。
5. 修复 get_me() 和 user::logout() 在非客户端环境下的 BUG。

版本 1.6.7 (2017-2-21 13:00)
1. 增加交互式控制台，通过直接在命令行中运行 mod.php 文件（无参数），将 ModPHP 运行于守护进程中，
   并等待用户输入，仅支持 PHP 语法，不支持 shell 命令语法，示例如：
   modphp>print_r(get_user(1));

版本 1.6.6 (2017-2-21 8:40)
1. 增加 parse_cli_param() 函数用来解析命令行命令，同时支持长参数(--key value)和短参数(-k value)，
   以及无键名参数(value)，可以同时支持多个或多种参数。
2. 程序入口文件 mod.php 支持命令行模式，并添加 config('mod.cliCharset') 选项来设置运行于
   命令行模式时操作系统所支持的编码，支持使用分号 ; 来同时运行多个命令。使用示例如:
   (1) ~>php mod.php curl http://modphp.hyurl.com/version
   (2) ~>php mod.php user::get --user_id 1
   (3) ~>php mod.php MOD_VERSION
   (4) ~>php mod.php 100+100

版本 1.6.5 (2017-2-20 22:20)
1. 提升路径检测严格性。
2. curl() 函数添加 convert 选项，用来将结果转换为指定的编码。
3. 修改配置项中的 staticURL 为 staticURI，并将 staticurl() 函数和配置文件 staticurl.php 分别修改为
   staticuri() 和 static-uri.php，但依旧保留对原来用法的支持(只兼容，不推荐)。除了 staticurl.php 文件需要手动修改为
   static-uri.php。

版本 1.6.4 (2016-2-20 8:00)
1. 修复访问 http://<网站地址>/index.html 时报告 404 错误的问题。
2. 移除 __DISPLAY__ 常量，增加函数 display_file() 用以替换。
3. 更改了 template_file() 函数的行为，现在，display_file() 函数的行为完善了 template_file() 函数。
4. 新增配置 config('mod.template.appPath') 选项，如果设置，那模板根目录则相对于它而不是网站根目录。
5. 在 config('mod.template.appPath') 所设置目录下(非模板目录)的模板也会被编译，
   如果开启了 config('mod.template.compiler.enable') 选项。
6. 修复 url() 函数在使用 IP 访问时返回值中使用域名的问题。

版本 1.6.3 (2016-2-19 18:23)
1. 修复直接访问 http://<网站地址>/index.php 时报告 404 错误的问题，
   增加模板页面的 pathinfo 模式支持，需要开启 config('mod.pathinfoMode') 选项，
   开启后 create_url() 函数创建的 URL 地址将包含 index.php 模板入口文件。
2. 增加对 NGINX 服务器的全面支持，但 WebSocket 不能通过浏览器启动而运行于 Fast-CGI 模式。
   NGINX 服务器需要自己修改服务器配置文件来实现 php 的支持，ModPHP 提供修改建议(在 nginx.conf.txt 中)。
3. Session 保存路径默认使用 PHP 默认的设置。
3. 修复了一些其他的 BUG。

版本 1.6.2 (2016-2-18 22:10)
1. 模板引擎新增布局支持，使用 <layout> 标签，支持一个 data 属性为布局模板文件名。
   布局模板中使用 __CONTENT__ 标记来表示内容，支持嵌套的布局。

版本 1.6.1 (2017-2-18 7:00)
1. 完善一些正则表达式。
2. 修复直接使用控制台运行 ws.php 时可能出现报错或者无法启动程序的 BUG。
3. 修复登录后在浏览器中尝试开启 WebSocket 模式时导致服务器挂起的问题。
4. 修改为任何管理员都可以在浏览器中开启 WebSocket 模式。
5. 将语言包文件命名方式修改为默认 RFC 1766 标准的小写字母形式。

版本 1.6.0 (2017-2-17 17:05)
1. 增加安装前检测和安装新版本的功能。

版本 1.5.9 (2017-2-16 20:00)
1. 第一次安装成功后不再自动登录。
2. 将 clearTrash 统一修改为 cleanTrash。

版本 1.5.8 (2017-2-9 13:00)
1. 完善语言包加载机制。

版本 1.5.7 (2017-2-8 18:10)
1. is_ajax() 函数判断能力提升。

版本 1.5.6 (2017-2-8 0:50)
1. 修复 mod.php/obj/act URL 形式中参数获取错误的问题。

版本 1.5.5 (2017-2-7 23:30)
1. 删除文件后判断如果文件目录已为空，则删除目录。
2. 将浏览器访问 mod.php 时填充 $_GET 参数以及转换请求参数的操作提前到系统预加载过程。
3. 将输出缓冲区(mod.outputBuffering) 默认值修改为 0，即不限制。
4. 如果运行的文件不是 mod.php 或者 ws.php，is_client_call() 将始终返回 false。

版本 1.5.4 (2017-2-7 8:30)
1. 修复安装时写出两次配置的问题。
2. 在未安装情况下除了默认安装页面，其它浏览器页面也能调用 mod.php。
3. 修复维护页面总是报告 404 错误的问题。

版本 1.5.3 (2017-2-6 15:40)
1. 不再抑制模板引擎中引入文件时可能出现的错误。

版本 1.5.2 (2017-2-5 22:00)
1. is_agent()、is_curl()、is_ajax() 等函数判断能力升级。

版本 1.5.1 (2017-2-5 18:00)【重要】
1. 在默认 WebSocket 模式下，当客户端连接时将尝试自动还原会话。
2. WebSocket 模式下也能进行网站地址侦测，但仅限使用 80 或 443(SSL) 端口的网站。
3. 在进行页面判断时可以不用提交 HTTP_REFERER 参数。
4. 在实现 2 和 3 中的功能时，需要客户端在连接时设置 WebSocket 页面地址，类似这样的：
   如果网站页面地址为:    http://localhost/modphp/
   那么 WebSocket 应该为: ws://localhost:8080/modphp/
   只有这样 ModPHP 才能进行自动网站地址侦测和页面判断。
5. 新增变量 $WS_HEADER 用来保存 WebSocket 客户端连接的头部信息。
6. curl() 函数当遇到合适的响应头部将自动解析 JSON 数据，而 parseJSON 选项则设置始终解析。
7. 在线更新时，优先使用内置的 file_get_contents() 函数来获取版本信息与更新包。
8. 正式移除 http_post() 和 http_get() 函数。

版本 1.5.0 (2017-2-5 8:00)
1. 修复在 Api Hook 回调函数中进行页面判断时可能引发无限递归的问题。

版本 1.4.9 (2017-2-4 16:00)
1. curl() 函数可以设置自动解析 JSON 数据。
2. is_curl() 函数判断能力提升。

版本 1.4.8 (2017-2-4 13:00)
1. 更新 curl() 函数，将 HTTP 状态码超过 400 的结果作为错误处理。
2. http_post() 和 http_get() 函数不再建议使用，将发出错误警告。

版本 1.4.7 (2017-2-3 23:00)
1. report_433/404/500() 函数在 WebSocket 模式下不终止程序，而是将错误信息发回给客户端。
2. 增加默认 WebSocket 模式下对页面判断的支持，需要客户端发送数据时同时发送 HTTP_REFERER 为当前 URL 地址给服务器。
3. 修复了一些 BUG。

版本 1.4.6 (2017-2-3 21:00)
1. 默认 WebSocket 服务器也可以在浏览器中开启，
   并修复其在动态调用类方法（Api Hook 回调函数）时因大小写不匹配而造成访问受限的问题。

版本 1.4.5 (2017-2-3 11:30)
1. get_{module}()、get_multi_{module}() 等函数也将可数字符串作为主键/索引参数，
   如 get_user('1') 和 get_user(1) 有同等作用。
2. 修复获取文件时路径不是绝对路径的问题。

版本 1.4.4 (2017-1-30 13:20)
1. 将自动恢复功能由预加载转到加载过程。

版本 1.4.3 (2017-1-30 0:40)
1. 修复系统未安装时调用 mod.init API 而导致错误的问题。
2. 修复系统安装时报告 403 错误的问题。

版本 1.4.2 (2017-1-29 21:00)
1. 修复 mysql::open() 方法打开多连接时错误的问题。

版本 1.4.1 (2017-1-29 18:35)
1. 修复 1.4.0 版本中正确的页面报 404 错误的 BUG。

版本 1.4.0 (2017-1-29 16:30)
1. 更新 URL 解析函数 analyze_url()，仅使用斜杠分隔参数，并且进行后缀名判断，不再解析查询字符串。

版本 1.3.9 (2017-1-29 11:55)
1. 升级 WebSocket::on() 方法，可为一个事件绑定多个回调函数。
2. 修复 WebSocket 接收大数据出错的问题，将上限调整为 8MB。

版本 1.3.8 (2017-1-28 13:00)
1. 除了常规配置，其他配置不再与系统配置合并，而是直接使用用户配置。
2. 语言包也使用增量合并。

版本 1.3.7 (2017-1-26 19:53)
1. 恢复数据库配置结构文件 database.php 仅使用简单的方式合并系统和用户配置。

版本 1.3.6 (2017-1-24 23:41)
1. 修复 {module}_parent() 函数无条件获取第一条记录的问题。

版本 1.3.5 (2017-1-23 23:12)
1. 将 config(), hooks(), get_{module}() 之类的函数无数据返回值修改为 null。

版本 1.3.4 (2017-1-21 15:30)
1. 加入系统预初始化过程，可在用户模块函数文件或模板函数文件中调用登录和用户判断函数。

版本 1.3.3 (2017-1-21 2:30)
1. 将模板函数文件 function.php 修改为 functions.php，但依然保留对 function.php 文件的支持。
2. create_url() 函数添加默认参数 page = 1。

版本 1.3.2 (2017-1-17 14:49)
1. 去除上传文件最小限制，并将上传文件限制单位改为 KB。

版本 1.3.1 (2017-1-17 1:35)
1. 将数据库结构配置文件 database.php 设置为使用深层增量的方式合并系统和用户配置。

版本 1.3.0 (2017-1-16 18:20)
1. 修复 {module}::getTrash() 方法中的一处代码错误。
2. 修复 {module}::clearTrash() 命名为 deleteTash 的错误；
3. 去除 {module}::getTrash() 和 {module}::clearTrash() 方法的参数。

版本 1.2.9 (2017-1-15 18:28)
1. 更改上传文件保存方式，不再使用原始文件名进行保存，而使用上传文件的 MD5 值来作为文件名进行保存。
2. 修复增量编译模板无效的问题。

版本 1.2.8 (2017-1-14 3:26)
1. 添加 API {module}.get.before，用于在获取数据前的场景中，其回调函数的参数为传入的参数；
   并去掉 API {module}.search。
2. 完善部分 mysql 对象的调用，修复了 get_multi_{module}() 和 get_search_{module}() 函数不会跳过空记录的问题。

版本 1.2.7：
1. 将模板编译引擎所支持的后缀列表缩减为 php, html, htm，因为它们时 Apache 默认的索引文件类型，并且对代码编辑器友好。
2. 修复不解析额外伪静态地址的问题，并且使用额外伪静态地址的模板文件也支持上述文件类型。
3. 完善侦测请求模板的算法，解决无法在系统初始化完成前使用页面判断函数的问题。

版本 1.2.6【重要】：
相对于 1.0.0，1.2.6 版本增加并完善了下面这些功能和体验：
1. 增加 template.class.php 模板编译引擎，实现 PHP 语言结构 HTML 标签化，并使用 {} 标识表达式；
2. 增加 is_img()、get_template_file() 等函数实现更多功能，更新了 create_url() 函数的传参方式；
   更改了 register_module_functions() 函数的实现机制，不再手动调用，在用户环节已废弃；
3. 为配合模板引擎，修改了一些配置结构：
  （1）添加了 mod.template 配置节点，并且将 site.template 更改为 mod.template.savePath；
  （2）取消 mod.autoSerialize 配置项，使用 {module}.keys.serialize 替代；
  （3）{module}.keys.requires 修改为 {module}.keys.require;
  （3）{module}.keys.filters 修改为 {module}.keys.filter;
  （4）{module}.keys.searches 修改为 {module}.keys.search;
4. 增加了重新安装当前版本的功能，可在一定程度上解决核心文件丢失或损坏的问题；
5. 修复了其他的一些 BUG 和并完善了用户体验；

【更新说明】
此日志从 1.2.6 版本开始，以后的每一个版本更新都会在此添加说明。